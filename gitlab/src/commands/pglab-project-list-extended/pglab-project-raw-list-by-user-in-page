#!/usr/bin/env bash
function pglab-project-raw-list-by-user-in-page () {
    local gitlabToken="$1"
    local userParam="$2"
    local getContainerRegistries="$3"
    local getContainerRegistryTags="$4"
    local getContainerRegistryDetailedTags="$5"
    local getRemoteMirrors="$6"
    local getPullMirror="$7"
    local per_page="$8"
    local page="$9"
    local userPath="$(pglab-get-number-or-url-encoded "$userParam")"
    local requestUrl=""
    local listProjectsPage=""
    local additionalCurlParams=""
    [[ "$PGLAB_CURL_DISABLE_SSL_VERIFICATION" == "true" ]] && additionalCurlParams="${additionalCurlParams} -k"
    # Try get projects in the user in the page
    requestUrl="https://gitlab.com/api/v4/users/${userPath}/projects?per_page=$per_page&page=$page"
    listProjectsPage=$(curl $additionalCurlParams -s -f --header "Authorization: Bearer $gitlabToken" "${requestUrl}")
    exitCode=$?
    if [ $exitCode -ne 0 ]; then
        >&2 echo -e "Error: failed request to get projects in user"
        return "$exitCode"
    fi

    if [[ "$getContainerRegistries" == "true" ]]; then
        listProjectsPage="$(pglab-project-fill-container-registries "$listProjectsPage" "$getContainerRegistryTags" "$getContainerRegistryDetailedTags")"
        exitCode="$?"
        if [ $exitCode -ne 0 ]; then
            return "$exitCode"
        fi
    fi

    if [[ "$getRemoteMirrors" == "true" ]]; then
        listProjectsPage="$(pglab-project-fill-remote-mirrors "$listProjectsPage")"
        exitCode="$?"
        if [ $exitCode -ne 0 ]; then
            return "$exitCode"
        fi
    fi

    if [[ "$getPullMirror" == "true" ]]; then
        listProjectsPage="$(pglab-project-fill-pull-mirror "$gitlabToken" "$listProjectsPage")"
        exitCode="$?"
        if [ $exitCode -ne 0 ]; then
            return "$exitCode"
        fi
    fi

    echo "$listProjectsPage" | jq .
    return $?
}