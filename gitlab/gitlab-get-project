#!/bin/bash

# check dependencies
if [ -z $(type -p jq) ]; then
    1>&2 printf "[ ERROR ] need 'jq' dependency to parse json."
    exit 1
fi

# If script dir is not in PATH, add it
SCRIPT_DIR=$(dirname -- "$( readlink -f -- "$0"; )")
echo "$PATH" | sed -E "s/:/\n/g" | grep -E "^${SCRIPT_DIR}$" > /dev/null && ADD_TO_PATH=false || ADD_TO_PATH=true
if [ "$ADD_TO_PATH" == "true" ]; then
    export PATH="${SCRIPT_DIR}:${PATH}"
fi

source "$SCRIPT_DIR/.gitlab-default-values"
commandInfo=$(echo "COMMAND NAME
       $0 - get project by project ID (number) or project full path

SYNOPSIS
       $0 [OPTION]... PROJECT

PARAMETERS
       PROJECT [required]
              If it is a number, then it is the project ID, it is used to get the project
           with this project ID

              But if it is not a number, then it is the project full path, it is used to get
           the project with this project full path

OPTIONS
       --help
              display this help and exit

       --man
              display this help with less, like command man, then exit\n")

if [ "$1" == "--help" ]; then
    echo -e "${commandInfo}"
    exit 0
fi

if [ "$1" == "--man" ]; then
    echo -e "${commandInfo}" | less
    exit 0
fi

# Verify required variables and parameters
errorParameters=""
if [ -z ${GITLAB_TOKEN+x} ]; then
    msgErrorItem="Variable GITLAB_TOKEN is required"
    errorParameters=$(echo "${errorParameters}\n${msgErrorItem}")
fi
if [ -z ${1+x} ]; then
    msgErrorItem="Parameter PROJECT is required"
    errorParameters=$(echo "${errorParameters}\n${msgErrorItem}")
fi
if [ "$errorParameters" != "" ]; then
    errorParameters=$(echo "$errorParameters" | sed -E "s/^\\\n//")
    echo -e "Errors:\n$(echo -e "$errorParameters" | sed -E "s/^/ - /g")"
    echo -e "\nTry '$0 --help' or '$0 --man' for more information."
    exit 1
fi

# Verify if parameter is number, then it is ID, or just full name
if [ "$((( $1 )) 2>/dev/null && echo $? || echo $?)" -eq 0 ]; then
    SEARCH_BY="ID"
    PROJECT_ID="$1"
    PROJECT_PATH="$PROJECT_ID"
else
    SEARCH_BY="FULL_PATH"
    PROJECT_FULL_PATH_PARSED=$(echo "$1" | sed -E "s/\//%2F/g")
    PROJECT_PATH="$PROJECT_FULL_PATH_PARSED"
fi

# Get project
PROJECT_JSON=$(curl -s -f --header "Authorization: Bearer $GITLAB_TOKEN" "https://gitlab.com/api/v4/projects/${PROJECT_PATH}")
if [ $? -ne 0 ]; then
    echo -e "Error: failed request to get project"
    exit 1
fi

# Just format json to view it in terminal
echo "$PROJECT_JSON" | jq .